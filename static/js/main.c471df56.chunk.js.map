{"version":3,"sources":["logo.svg","Header.js","Footer.js","Home.js","Code.js","Example.js","examples/HelloWorld.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","src","logo","alt","Component","Footer","Home","src_Footer_0","Code","hljsDefineSolidity","hljs","initHighlightingOnLoad","dangerouslySetInnerHTML","__html","this","props","code","Example","title","src_Code","target","HelloWorld","src_Example","App","src_Header_0","BrowserRouter","basename","process","Switch","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yPCkBzBC,mLAZX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KACNJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAMC,IAAI,OAAOJ,UAAU,iBAGvCH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,gCARSI,aCSNC,gMARX,OACET,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,sCAAR,+BADF,MACiFJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,wEAAR,UADjF,MAC6KJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,gFAAR,mBAJ9JI,cCwBNE,mLArBX,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,wBAEFJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,+BACqBF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,mCAAR,YADrB,2BAIAJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,gBAAR,kBAIRJ,EAAAC,EAAAC,cAACS,EAAD,cAjBWH,wDCoBJI,8LAhBXC,IAAmBC,KACnBA,IAAKC,0DAIL,OACEf,EAAAC,EAAAC,cAAA,OAAKc,wBAAyB,CAACC,OAAQC,KAAKC,MAAMC,eARrCZ,aCoBJa,mLAnBX,OACErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKgB,KAAKC,MAAMG,OAEhBtB,EAAAC,EAAAC,cAACqB,EAAD,CAAMH,KAAMF,KAAKC,MAAMC,OAEvBpB,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,6BAA6BoB,OAAO,WAA5C,UAEVxB,EAAAC,EAAAC,cAACS,EAAD,cAVcH,aCFhBiB,mLAEF,OACEzB,EAAAC,EAAAC,cAACwB,EAAD,CACEJ,MAAM,cACNF,KAAMA,WALWZ,aAWnBY,EAAI,2aAeKK,ICJAE,mLAhBX,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQC,SAAUC,IAChB/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWV,IACtCzB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWzB,eATvBF,aCKE4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c471df56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.da793b47.svg\";","import React, { Component } from 'react'\nimport './Header.css'\nimport logo from './logo.svg'\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <a href=\"/\">\n          <img src={logo} alt=\"logo\" className=\"Header-logo\" />\n        </a>\n\n        <h3><a href=\"/\">Solidity by Example</a></h3>\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './Footer.css'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <p className=\"footer\">\n        <a href=\"mailto:soliditybyexample@gmail.com\">soliditybyexample@gmail.com</a> | <a href=\"https://github.com/solidity-by-example/solidity-by-example.github.io\">source</a> | <a href=\"https://github.com/solidity-by-example/solidity-by-example.github.io#license\">license</a>\n      </p>\n    )\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport './Home.css'\nimport Footer from './Footer'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1 className=\"Home-header\">\n          <a href=\"/\">Solidity by Example</a>\n        </h1>\n        <div className=\"Home-main\">\n          <p>\n            an introduction to <a href=\"https://solidity.readthedocs.io\">Solidity</a> using example programs\n          </p>\n\n          <ul>\n            <li><a href=\"/hello-world\">Hello World</a></li>\n          </ul>\n        </div>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/foundation.css'\nimport hljsDefineSolidity from 'highlightjs-solidity'\n\nclass Code extends Component {\n  componentDidMount() {\n    hljsDefineSolidity(hljs)\n    hljs.initHighlightingOnLoad()\n  }\n\n  render() {\n    return (\n      <div dangerouslySetInnerHTML={{__html: this.props.code}}>\n      </div>\n    )\n  }\n}\n\nCode.propTypes = {\n  code: PropTypes.string.isRequired\n}\n\nexport default Code\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Code from './Code'\nimport Footer from './Footer'\n\nclass Example extends Component {\n  render() {\n    return (\n      <div>\n        <h2>{this.props.title}</h2>\n\n        <Code code={this.props.code} />\n\n        <p>Try on <a href=\"https://remix.ethereum.org\" target=\"__blank\">Remix</a></p>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  title: PropTypes.string.isRequired,\n  code: PropTypes.string.isRequired,\n}\n\nexport default Example\n","import React, { Component } from 'react'\nimport Example from '../Example'\n\nclass HelloWorld extends Component {\n  render() {\n    return (\n      <Example\n        title=\"Hello World\"\n        code={code}\n      />\n    )\n  }\n}\n\nconst code = `\n<pre><code class=\"language-solidity\">/*\npragma specifies what versions of Solidity this file can work on.\nThis file will not compile with a compiler earlier than version 0.5.3\nand it will also not work on a compiler starting from version 0.6.0\n*/\npragma solidity ^0.5.3;\n\ncontract HelloWorld {\n    function hello() public returns (string memory) {\n        return &quot;Hello World!&quot;;\n    }\n}</code></pre>\n`\n\nexport default HelloWorld\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.css'\nimport Header from './Header'\nimport Home from './Home'\nimport HelloWorld from './examples/HelloWorld'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"App-main\">\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              <Route path=\"/hello-world\" component={HelloWorld} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}